"use strict";const{execFile,exec,execFileSync,fork,spawn,spawnSync}=require("child_process");function executeFile(e,o,c){return new Promise((n,r)=>{execFile(e,o,{cwd:c},(e,o)=>{e?r(e):n(o)})})}function executeFileSync(e,o,n){return execFileSync(e,o)}function execute(e,o,c){return new Promise((n,r)=>{exec(e,o,{cwd:c},(e,o)=>{e?r(e):n(o)})})}function executeCommand(o,c,t){return new Promise((n,r)=>{var e=spawn(o,c,{cwd:t},(e,o)=>{e?r(e):n(o)});e.stdout.on("data",e=>{console.error("ps stdout: "+e)}),e.stderr.on("data",e=>{console.error("ps stderr: "+e)}),e.on("close",e=>{0!==e&&console.log("ps process exited with code "+e)}),e.on("error",e=>{console.error("Failed to start subprocess.")})})}function executeCommandSync(e,o,n){return spawnSync(e,o)}function executeFork(e,o,n){fork(e,o,options).on("error",e=>{})}function executeFork(e,o,n){exec(e,o,options).on("error",e=>{})}