"use strict";const{execFile,exec,execFileSync,fork,spawn,spawnSync}=require("child_process"),util=require("util");async function executeFile(e,t,c){var{error:e,stdout:t,stderr:c}=await util.promisify(execFile)(e,t,c||{cwd:process.cwd()});return{error:e,stdout:t,stderr:c}}function executeFileSync(e,t,c){return execFileSync(e,t,c||{cwd:process.cwd()})}async function execute(e,t,c){const s=util.promisify(s);var{error:e,stdout:t,stderr:c}=await s(e,t,c||{cwd:process.cwd()});return{error:e,stdout:t,stderr:c}}function executeCommand(t,r,o){return new Promise((c,s)=>{var e=spawn(t,r,o||{cwd:process.cwd()},(e,t)=>{e?s(e):c(t)});e.stdout.on("data",e=>{console.error("ps stdout: "+e)}),e.stderr.on("data",e=>{console.error("ps stderr: "+e)}),e.on("close",e=>{0!==e&&console.log("ps process exited with code "+e)}),e.on("error",e=>{console.error("Failed to start subprocess.")})})}function executeCommandSync(e,t,c){return spawnSync(e,t,c||{cwd:process.cwd()})}function executeFork(e,t,c){fork(e,t,c||{cwd:process.cwd()}).on("error",e=>{})}function executeFork(e,t,c){exec(e,t,c||{cwd:process.cwd()},()=>{}).on("error",e=>{})}let commands=["access","accton","aclocal","acpi","acpi_available","acpid","addr2line","agetty","alias","amixer","aplay","aplaymidi","apropos","apt","apt-get","aptitude","ar","arch","arp","aspell","atd","atrm","atq","autoconf","autoheader","automake","autoreconf","autoupdate","awk","banner","basename","batch","bc","bg","biff","bind","bison","break","builtin","bzcmp","bzdiff","bzgrep","bzip2","bzless","cal","case","cat","cc","ccrypt","cd","cfdisk","chage","chattr","chfn","chgrp","chkconfig","chmod","chown","chpasswd","chroot","chrt","chsh","chvt","cksum","clear","cmp","col","colcrt","colrm","column","comm","compress","continue","cp","cpio","cpp","cron","crontab","csplit","ctags","cupsd","curl","cut","cvs","date","dc","dd","declare","depmod","df","diff","diff3","dir","dirname","dirs","disable","dmesg","dmesg","dmidecode","domainname","dos2unix","dosfsck","dstat","du","dump","dumpe2fs","dumpkeys","echo","ed","egrep","eject","emacs","enable","env","eval","ex","exec","exit","expand","expect","export","expr","factor","fc","fc-cache","fc-list","fdisk","fg","fgrep","file","find","finger","fmt","fold","for","free","Fun","function","g++","gawk","gcc","gdb","getent","gpasswd","grep","groupadd","groupdel","groupmod","groups","grpconv","gs","tar","xz","gz","gunzip","gzexe","gzip","halt","hash","hdparm","help","hexdump","history","host","hostid","hostname","hostnamectl","htop","hwclock","iconv","id","if","iftop","ifup","import","info","insmod","install","iostat","iotop","ip","ipcrm","ipcs","iptables","iptables-save","iwconfig","join","journalctl","kill","last","less","let","ln","locate","look","lsblk","lshw","lsmod","lsof","lsusb","mailq","man","md5sum","mkdir","modinfo","more","mount","mpstat","mv","nc","netstat","nmcli","nslookup","od","passwd","paste","pidof","ping","pinky","pmap","poweroff","printf","ps","pwd","ranlib","rcp","read","readelf","readlink","reboot","rename","reset","restore","return","rev","rm","rmdir","rmmod","route","rsync","sar","scp","screen","script","scriptreplay","sdiff","sed","select","seq","setsid","shift","showkey","shred","shutdown","sleep","source","sort","split","ssh","strace","stty","su","sudo","sum","sync","systemctl","tac","tail","tee","time","top","touch","tr","tracepath","traceroute","tree","tty","type","uname","unexpand","uniq","unix2dos","until","uptime","useradd","usermod","username","users","userdel","vi","vmstat","vnstat","w","wall","watch","wc","wget","whatis","which","while","who","whoami","write","xargs","xdg-open","yes","zdiff","zdump","zgrep","zip","ls","find","kill","ifconfig","curl","diff","head","tail","set","apropos","cat","whereis","hd","at","apt-get","yumrm","yum","cc","make","nohup","jobs","wait","atop","pgrep","/etc/inittab","init"];function generateCommandFunctions(t){var c=t.length,r={},o=process.cwd();for(let e=0;e<c;e++){let c=t[e],s=new Function("fileName","args","options","spawnSync",`return spawnSync(fileName, args, options || { cwd: "' + ${o} + '" });`);r[c]=(e,t)=>s(c,e||[],t||{cwd:process.cwd()},spawnSync)}return r}let commandFunctions=generateCommandFunctions(commands);module.exports=commandFunctions,module.exports.default=commandFunctions;